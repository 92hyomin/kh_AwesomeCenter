<?xml version="1.0" encoding="UTF-8"?>


<!-- ====  mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체 내에서 유일해야 한다.) -->
<mapper namespace="awesomeMember">
	
	<!-- 수강 내역 갯수 -->
	<select id="getOrderListCnt" parameterType="String" resultType="String">
		select count(*)
		from awesome_orderlist
		where userno_fk = #{userno}
	</select>
	
	<!-- 관심분야 카테고리 번호 채번 -->
	<select id="getCategoryNo" parameterType="String" resultType="String">
		select cate_no_fk
		from wishcategory
		where userno_fk = #{userno}
	</select>
	
	<!-- 채번한 번호로 관심분야 조회 -->
	<select id="getWishCategoryList" parameterType="HashMap" resultType="com.center.member.model.CategoryVO">
		select cate_name, cate_code
		from lec_category
		where cate_no in 
		<foreach collection="noArr" index="i" open="(" separator="," close=")">
			${noArr[i]}
		</foreach>	
	</select>
	
	<!-- 카테고리 목록 가져오기 -->
	<select id="getCategoryList" resultType="com.center.member.model.CategoryVO">
		select cate_no, cate_name, cate_code
		from lec_category
	</select>
	
	<!-- 마케팅 수신동의 변경 -->
	<update id="editMarketing" parameterType="HashMap">
		update awesome_member set marketing_email = #{emailCheck}, marketing_sms = #{smsCheck} where userno = #{userno}
	</update>
	
	<!-- 관심 분야 변경 -->
	<delete id="deleteWishCategory" parameterType="String">
		delete from wishcategory
		where userno_fk = #{userno}
	</delete>
	<insert id="insertWishCategory" parameterType="HashMap">
		insert into wishcategory(no, userno_fk, cate_no_fk)
		values(seq_wishcategory.nextval, #{userno}, #{cateno})
	</insert>
	
	<!-- 수강 내역 조회 -->
	<select id="getOrderList" parameterType="String" resultType="com.center.member.model.OrderListVO">
		select no, userno_fk, class_seq_fk, status, price, to_char(payday, 'yyyy-mm-dd') as payday
		from awesome_orderlist
		where userno_fk = #{userno}
		order by payday
	</select>

	<!-- 수강 내역 강좌 정보 -->
	<select id="getClassInfo" parameterType="HashMap" resultType="com.center.member.model.ClassVO">
		select class_seq, fk_cate_no, fk_teacher_seq, class_title, class_semester, 
				to_char(class_startdate,'yyyy-mm-dd') as class_startdate, to_char(class_enddate, 'yyyy-mm-dd') as class_enddate, 
				class_fee, class_subfee, class_day, class_place, class_personnel, 
				class_time, class_photo, class_content, class_status, class_heart
		from tbl_class
		<if test="noArr != null">
		where class_seq in 
		<foreach collection="noArr" index="i" open="(" separator="," close=")">
		${noArr[i]}
		</foreach>
		order by
		<foreach collection="noArr" index="i" open="(case class_seq when" separator="when" close="end)">
			 ${noArr[i]} then ${i}
		</foreach>
		</if>
	</select>
	
	<select id="getOrderListSearch" parameterType="HashMap" resultType="com.center.member.model.OrderListVO">
		select userno_fk, class_seq_fk, status, price, to_char(payday, 'yyyy-mm-dd') as payday
		from 
		(       
		select o.userno_fk, o.class_seq_fk, o.status, o.price, o.payday, c.class_semester, c.class_startdate
		from awesome_orderlist o, tbl_class c
		where o.class_seq_fk = c.class_seq
		)V
		<if test="(year != null and year != '') and (term == null or term == '')">
		where to_char(class_startdate, 'yyyy') = #{year}
		</if>
		<if test="(year == null or year == '') and (term != null and term != '')">
		where class_semester in 
		<if test="term == 3">('3월', '4월', '5월')</if>
		<if test="term == 6">('6월', '7월', '8월')</if>
		<if test="term == 9">('9월', '10월', '11월')</if>
		<if test="term == 12">('12월', '1월', '2월')</if>
		</if>
		<if test="(year !=null and year != '') and (term != null and term != '') ">
		where to_char(class_startdate, 'yyyy') = #{year} and 
		class_semester in 
		<if test="term == 3">('3월', '4월', '5월')</if>
		<if test="term == 6">('6월', '7월', '8월')</if>
		<if test="term == 9">('9월', '10월', '11월')</if>
		<if test="term == 12">('12월', '1월', '2월')</if>
		</if>
		order by payday
	</select>
	
	<!-- 결제 정보 -->
	<resultMap type="HashMap" id="payMap">
		<result property="no"				column="no"					javaType="String" />
		<result property="payday"			column="payday"				javaType="String" />
		<result property="status"			column="status"				javaType="String" />
		<result property="price"			column="price"				javaType="String" />
		<result property="class_seq"		column="class_seq"			javaType="String" />
		<result property="class_title"		column="class_title"		javaType="String" />
		<result property="fk_teacher_seq"	column="fk_teacher_seq"		javaType="String" />
		<result property="class_semester"	column="class_semester"		javaType="String" />
		<result property="class_place"		column="class_place"		javaType="String" />
		<result property="class_fee"		column="class_fee"			javaType="String" />
		<result property="class_day"		column="class_day"			javaType="String" />
		<result property="class_startdate"	column="class_startdate"	javaType="String" />
		<result property="class_enddate"	column="class_enddate"		javaType="String" />
		<result property="class_photo"		column="class_photo"		javaType="String" />
		<result property="userno_fk"		column="userno_fk"			javaType="String" />
	</resultMap>
	
	<select id="getPayInfo" parameterType="String" resultMap="payMap">
		select no, to_char(payday,'yyyy-mm-dd') as payday, status, price, class_seq, class_title, fk_teacher_seq, trim(class_semester) as class_semester,
				class_place, class_fee, class_day, to_char(class_startdate, 'yyyy-mm-dd') as class_startdate,
				to_char(class_enddate, 'yyyy-mm-dd') as class_enddate, class_photo, userno_fk
		from awesome_orderlist o, tbl_class c
		where o.class_seq_fk = c.class_seq and o.no = #{no}
	</select>
	
	<!-- 강사 정보 -->
	<select id="getTeacherInfo" parameterType="String" resultType="com.center.member.model.TeacherVO">
		select teacher_seq, fk_cate_no, teacher_name, teacher_gender
		from tbl_teacher
		where teacher_seq = #{teacherno}
	</select>


	<!-- 효민 -->
	<select id="idCheck" parameterType="String" resultType="Integer">
		select count(*) 
		from   awesome_member 
		where  userid= #{userid}
	</select>
	
	<insert id="insertUser" parameterType="HashMap">
		insert into AWESOME_MEMBER(USERNO, USERID, USERPW, USERNAME, RRN1, RRN2, POST, ADDR1, ADDR2, 
		                           HP1, HP2, HP3, EMAIL, MARKETING_SMS, MARKETING_EMAIL)
		values      (SEQ_AWESOME_MEMBER.nextval, #{userid}, #{userpwd}, #{userName}, #{ResidentNum1}, 
		            #{ResidentNum2}, #{post_code}, #{post_address1}, #{post_address2}, #{celphone_no1}, 
		            #{celphone_no2}, #{celphone_no3}, #{user_email}, #{marketingEmail}, #{marketingSMS})
	</insert>
	
	<select id="isExistUser" parameterType="HashMap" resultType="com.center.member.model.MemberVO">
		select userno, userid, userpw, username, rrn1, rrn2, post, addr1, addr2, hp1, hp2, hp3, email, marketing_sms, marketing_email, 
				to_char(registerday, 'yyyy-mm-dd') as registerday, to_char(editday, 'yyyy-mm-dd') as editday,
				to_char(lastloginday, 'yyyy-mm-dd') as lastloginday, status
		from   awesome_member
		where  userid= #{userid} and userpw = #{userpwd} and status = 1
	</select>
	
	<!-- 효민 끝-->
</mapper>